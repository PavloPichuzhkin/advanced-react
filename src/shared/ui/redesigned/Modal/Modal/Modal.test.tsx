// Generated by CodiumAI

import { render, screen, fireEvent } from '@testing-library/react';
import { Modal } from './Modal';

describe('Modal', () => {
    // Renders a modal with given props when isOpen is true
    it('should render modal when isOpen is true', () => {
        // Arrange
        const props = {
            isOpen: true,
            onClose: jest.fn(),
            // onCloseModalFromParent: jest.fn(),
        };

        // Act
        render(<Modal {...props} />);

        // Assert
        expect(screen.getByTestId('modal')).toBeInTheDocument();
    });

    // Closes the modal when Overlay is clicked
    it('should close modal when Overlay is clicked', () => {
        // Arrange
        const onClose = jest.fn();
        const props = {
            isOpen: true,
            onClose,
            // onCloseModalFromParent: jest.fn(),
        };
        render(<Modal {...props} />);

        // Act
        fireEvent.click(screen.getByTestId('overlay'));

        // Assert
        expect(onClose).toHaveBeenCalled();
    });

    // Applies the correct className based on isOpen prop
    it('should apply correct className based on isOpen prop', () => {
        // Arrange
        const props = {
            isOpen: true,
            onClose: jest.fn(),
            // onCloseModalFromParent: jest.fn(),
        };
        render(<Modal {...props} />);

        // Assert
        expect(screen.getByTestId('modal')).toHaveClass('opened');
    });

    // // Renders nothing when isOpen is false
    // it('should not render anything when isOpen is false', () => {
    //     // Arrange
    //     const props = {
    //         isOpen: false,
    //         onClose: jest.fn(),
    //         // onCloseModalFromParent: jest.fn(),
    //     };
    //
    //     // Act
    //     render(<Modal {...props} />);
    //
    //     // Assert
    //     expect(screen.queryByTestId('modal')).not.toBeInTheDocument();
    // });
    // //
});
